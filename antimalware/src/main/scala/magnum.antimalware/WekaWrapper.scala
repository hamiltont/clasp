package magnum.antimalware

object WekaWrapper {
  import java.io.{File,FileWriter}
  import weka.core.Instances
  import weka.core.converters.ArffLoader

  def run(mode: String) {
    try {
      combineAllArffs(mode)
    } catch {
      case e: Throwable => {
        println("Exception caught. Aborting.")
        e.printStackTrace
      }
  }

  def combineAllArffs(mode: String) {
    var arffLoader = new ArffLoader()
    val arffDir: File = new File(s"Arff/$mode")

    val arffList = arffDir.listFiles;
    var instances: Instances = null
    var structure: Instances = null

    for (arffFile <- arffList) {
      println(arffFile)
      arffLoader.setFile(arffFile)
      if (instances == null) {
        instances = arffLoader.getDataSet
        structure = arffLoader.getStructure
      } else {
        var newInstances = arffLoader.getDataSet
        var i = 0
        while (i < newInstances.numInstances) {
          val instance = newInstances.instance(i)
          instances.add(instance)
          i += 1
        }
      }
      arffLoader.reset
    }

    val combinedFile = new File(s"Arff/$mode.arff")
    val fw = new FileWriter(combinedFile)
    fw.write(instances.toString)
    fw.close
  }
}
