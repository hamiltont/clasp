package io.magnum.antimalware.features;

import java.io.FileNotFoundException;
import java.util.ArrayList;

/**
 * Get binder features by parsing /proc/binder/stats.
 */
public class BinderFeatures extends AbstractFeatures {
  public BinderFeatures() {
    _tags = new String[] { "binderTransaction", "binderReply",
      "binderAcquire", "binderRelease", "binderActiveNodes",
      "binderTotalNodes", "binderActiveRef", "binderTotalRef",
      "binderActiveDeath", "binderTotalDeath", "binderActiveTransaction",
      "binderTotalTransaction", "binderActiveTransactionComplete",
      "binderTotalTransactionComplete" };
  }

  public FeatureValue[] getFeatureVector() {
    FileParser fp = new FileParser();

    // Devices with kernel 3 have /sys/kernel/debug/binder/stats
    // while devices with kernel 2 have /proc/binder/stats
    if (!fp.load("/sys/kernel/debug/binder/stats") &&
        !fp.load( "/proc/binder/stats" )) {
      Log.w(TAG, "Unable to open binder statistics.");
      return null;
    }
    int transaction = fp.readInt( 1, 1 );
    int reply = fp.readInt( 2, 1 );
    int acquire = fp.readInt( 5, 1 );
    int release = fp.readInt( 6, 1 );

    int activeNodes = fp.readInt( 24, 2 );
    int totalNodes = fp.readInt( 24, 4 );

    int activeRef = fp.readInt( 25, 2 );
    int totalRef = fp.readInt( 25, 4 );

    int activeDeath = fp.readInt( 26, 2 );
    int totalDeath = fp.readInt( 26, 4 );

    int activeTransaction = fp.readInt( 27, 2 );
    int totalTransaction = fp.readInt( 27, 4 );

    int activeTransactionComplete = fp.readInt( 28, 2 );
    int totalTransactionComplete = fp.readInt( 28, 4 ); 

    fp.close();
    return new FeatureValue[] { new FeatureValue(transaction),
      new FeatureValue(reply), new FeatureValue(acquire),
      new FeatureValue(release), new FeatureValue(activeNodes),
      new FeatureValue( totalNodes), new FeatureValue(activeRef),
      new FeatureValue(totalRef), new FeatureValue(activeDeath),
      new FeatureValue(totalDeath), new FeatureValue(activeTransaction),
      new FeatureValue(totalTransaction), new FeatureValue(activeTransactionComplete),
      new FeatureValue(totalTransactionComplete)
    };
  }
}
